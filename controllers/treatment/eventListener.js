function clickHandler(e) {
    var field = getToothCode(e);
}

function moveHandler(e) {
    var clickedPosition = getPosition(e);
    createTeethPositions();
    checkAndPrint(clickedPosition);
}

 /* 
 * Gets the tooth code, that was cliecked.
 * Function converts pixel coordinates, taking canvas offset on board.
 * @param e - object that reprezents onclick event - automatically generated by JS.
 */
function getToothCode(e) {
    var clickedPosition = getPosition(e);
    createTeethPositions();
    check(clickedPosition);

    alert("RelativePosition: x = " + clickedPosition.x +", y = " + clickedPosition.y);
}

function getPosition(e){
    var x;
    var y;

    var jawImage = document.getElementById("jawImage");
    var canvas = document.getElementById("jaw");

    var height = canvas.height;
    var width = canvas.width;
 
    if (e.pageX != undefined && e.pageY != undefined) {
        x = e.pageX;
        y = e.pageY;
    }
    else{
        //Uwzględnienie przesunięcia canvasu na stronie względem (0, 0)
        x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
        y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
    }
    x -= jawImage.offsetLeft;
    y -= jawImage.offsetTop;
    
    return new Position(x/width, y/height);
}


/*Represents relative posicion [0, 1]*/
function Position(x, y){
    this.x = x;
    this.y = y;
}

/*Represents relative position of tooth.*/
function Tooth(code, x, y, r){
    this.code = code;
    this.x = x;
    this.y = y;
    this.r = r;
}

Tooth.prototype.isItMe = function(clickedPosition){
    //alert("RelativePosition: x = " + clickedPosition.x +", y = " + clickedPosition.y);
    var xDiff = Math.abs(clickedPosition.x - this.x);
    var yDiff = Math.abs(clickedPosition.y - this.y);
    var distance = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));
    if( distance < this.r){
        console.log(this.code);
        return true;
    }
    return false;
}

function createTeethPositions(){
    teeth = [];

//LEFT TOP
    var tooth = new Tooth("+1", 0.44, 0.06, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+2", 0.34, 0.08, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+3", 0.26, 0.12, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+4", 0.22, 0.17, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+5", 0.18, 0.23, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+6", 0.14, 0.3, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+7", 0.11, 0.38, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("+8", 0.1, 0.46, 0.04);
    teeth.push(tooth);

//RIGHT TOP

    var tooth = new Tooth("1+", 0.56, 0.06, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("2+", 0.66, 0.08, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("3+", 0.73, 0.12, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("4+", 0.78, 0.17, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("5+", 0.81, 0.23, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("6+", 0.85, 0.3, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("7+", 0.88, 0.38, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("8+", 0.9, 0.46, 0.04);
    teeth.push(tooth);



    var tooth = new Tooth("-1", 0.46, 0.96, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-2", 0.38, 0.95, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-3", 0.3, 0.92, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-4", 0.25, 0.88, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-5", 0.19, 0.82, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-6", 0.15, 0.75, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-7", 0.12, 0.66, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("-8", 0.11, 0.57, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("1-", 0.54, 0.96, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("2-", 0.62, 0.95, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("3-", 0.69, 0.92, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("4-", 0.75, 0.88, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("5-", 0.81, 0.82, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("6-", 0.85, 0.75, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("7-", 0.88, 0.66, 0.04);
    teeth.push(tooth);

    var tooth = new Tooth("8-", 0.90, 0.57, 0.04);
    teeth.push(tooth);
}

function check(clickedPosition){
    for (index = 0; index < teeth.length; index++) {
        teeth[index].isItMe(clickedPosition);
    }
}


function checkAndPrint(clickedPosition){
    for (index = 0; index < teeth.length; index++) {
        var tooth = teeth[index];
        var canvas = document.getElementById("jaw_pointer");
        var context = canvas.getContext('2d');
        context.clearRect(0, 0, canvas.width, canvas.height);  
        if (teeth[index].isItMe(clickedPosition)){
            context.clearRect(0, 0, canvas.width, canvas.height);  
            var centerX = tooth.x;
            var centerY = tooth.y;
            var radius = tooth.r;

           /* context.beginPath();
            context.arc(centerX * canvas.width, centerY * canvas.height, radius * canvas.width, 0, 2 * Math.PI, false);
            context.fillStyle = 'green';
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = '#003300';
            context.stroke();*/

                  // create radial gradient
            context.rect(0, 0, canvas.width, canvas.height);
            var grd = context.createRadialGradient(centerX * canvas.width, centerY * canvas.height, 2, centerX * canvas.width, centerY * canvas.height, 20);
            // light blue
            grd.addColorStop(0, '#000000');
            // dark blue
            grd.addColorStop(1, '#FFFFFF');

            context.fillStyle = grd;
            context.fill();
            break;
        }
        //context.clearRect(0, 0, canvas.width, canvas.height);  
    }
}